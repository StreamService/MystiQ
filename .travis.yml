# language target
language: cpp
compiler: gcc

# main build matrix
matrix:
  include:
    - name: "Bionic Ubuntu Linux"
      os: linux
      dist: bionic
      sudo: required
      env: TARGETOS=bionic-linux

# install, install QT5.13 from KDE Neon
install:
  # add Qt5 version 5.10+ to repositories
  - echo "deb [trusted=yes] http://archive.neon.kde.org/user/ bionic main" > ./kde_neon.list
  - sudo mv ./kde_neon.list /etc/apt/sources.list.d/kde_neon.list
  # update and upgrade
  - sudo apt-get update
  - sudo apt-get upgrade
  # force upgrade (we are using a Qt5 files from a newer distro)
  - sudo apt-get dist-upgrade -o dpkg::options::="--force-overwrite"
  # install basic deps and build deps
  - sudo apt install build-essential g++ make ffmpeg sox mplayer libnotify-dev mesa-common-dev libglvnd-dev desktop-file-utils
  # install specific Qt5 deps
  - sudo apt install qt5-default qtdeclarative5-dev qtmultimedia5-dev libqt5multimedia5-plugins libqt5opengl5-dev libqt5widgets5 qt5-qmake-bin qtbase5-dev qt5-qmake
  # show the Qt5 versions for debug
  - qtchooser -print-env
  - qmake -v
  # install debian build deps for the .deb file generation
  - sudo apt install devscripts dh-make fakeroot

# build & test scripts
script:
  - /usr/lib/qt5/bin/qmake mystiq.pro
  - make
  - sudo make install

# notifications (only via telegram)
notifications:
  email: true
  #webhooks: https://fathomless-fjord-24024.herokuapp.com/notify

# make the AppImage bundle
before_deploy:
    # install AppImage toolchain
  - wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
  - wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
  - wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
  - chmod +x *.AppImage
  - chmod +x comple*.sh
  # build the AppDir
  - make install INSTALL_ROOT=AppDir
  # add extra tools
  - ./complete_appdir.sh
  # adding qml packs
  - cp -r /usr/lib/x86_64-linux-gnu ./AppDir/usr/lib/x86_64-linux-gnu
  # run the linuxdeploy script
  - ./linuxdeploy-x86_64.AppImage --appdir=AppDir --plugin qt --output appimage
  # listing the result
  - ls -lh *.AppImage
  # get the tag version
  - export VERSION="$(git describe --tags --exact-match HEAD 2> /dev/null)"
  # set the version on the filename
  - mv MystiQ*AppImage MystiQ_$VERSION.AppImage
  # create the .deb for ubuntu & debian distros
  - ./makedeb.sh

# deploy to Github
deploy:
  # deploy on linux
  - provider: releases
    api_key: $OAUTHTOKEN
    file_glob: true
    draft: true
    overwrite: true
    skip_cleanup: true
    on:
      tags: true
    file: 
      - ./MystiQ*.AppImage
      - $HOME/mystiq*.deb
